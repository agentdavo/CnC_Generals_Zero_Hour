diff a/lib/CMakeLists.txt b/lib/CMakeLists.txt	(rejected hunks)
@@ -90,38 +90,38 @@ if(LVGL_USE_LINUX_FBDEV)
     target_compile_definitions(lvgl PUBLIC LV_USE_LINUX_FBDEV=1)
 endif()
 
 if(LVGL_USE_NUTTX)
     target_compile_definitions(lvgl PUBLIC LV_USE_NUTTX=1)
 endif()
 
 set(MINIAUDIO_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/miniaudio/miniaudio.c)
 add_library(miniaudio STATIC ${MINIAUDIO_SOURCE})
 target_include_directories(miniaudio PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/miniaudio)
 if(APPLE)
     # CoreAudio headers rely on the Clang Blocks extension.  When building on
     # macOS ensure the flag is enabled only when Clang is actually used,
     # otherwise warn that audio may fail to compile.
     target_compile_options(miniaudio PRIVATE
         $<$<C_COMPILER_ID:Clang>:-fblocks>
     )
     if(NOT CMAKE_C_COMPILER_ID MATCHES "Clang")
         message(WARNING "The miniaudio target expects Clang on macOS. Blocks support is disabled")
     endif()
 endif()
 
 add_library(uGLES INTERFACE)
 target_include_directories(uGLES INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/uGLES)
 
-add_subdirectory(UniSpySDK)
-target_include_directories(UniSpySDK PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/UniSpySDK)
+add_subdirectory(uni_spy_sdk)
+target_include_directories(UniSpySDK PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/uni_spy_sdk)
 
-add_library(STLport INTERFACE)
-target_include_directories(STLport INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/STLport)
+add_library(STLport INTERFACE)
+target_include_directories(STLport INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/stlport)
 
 add_subdirectory(miles-sdk-stub)
 add_subdirectory(zlib)
 add_subdirectory(liblzhl)
 
 # Provide a simple alias matching the previous interface target name
 add_library(liblzhl ALIAS lzhl)
 
